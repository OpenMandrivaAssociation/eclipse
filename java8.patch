--- eclipse.jdt.core/org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ElementsImpl.java.orig	2014-11-16 20:21:58.286778510 +0000
+++ eclipse.jdt.core/org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ElementsImpl.java	2014-11-16 20:22:35.294779596 +0000
@@ -702,4 +702,8 @@
 		}
 	}
 
+       public boolean isFunctionalInterface(TypeElement type) {
+               return false;
+       }
+
 }
--- eclipse.jdt.core/org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ExecutableElementImpl.java.orig	2014-11-16 20:05:12.009748977 +0000
+++ eclipse.jdt.core/org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ExecutableElementImpl.java	2014-11-16 20:17:29.198770613 +0000
@@ -334,4 +334,26 @@
 		return false;
 	}
 
+       public TypeMirror getReceiverType() {
+               
+               
+              
+             
+            
+           
+             
+               return NoTypeImpl.NO_TYPE_NONE;
+       }
+
+       public boolean isDefault() {
+              
+               return false;
+       }
+
+       @SuppressWarnings("unchecked")
+       public <A extends Annotation> A[] getAnnotationsByType(Class<A> annotationType) {
+               return (A[]) new Annotation[0];
+       }
+
+
 }
--- eclipse.jdt.core/org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ElementImpl.java.orig	2014-11-16 20:11:17.334759699 +0000
+++ eclipse.jdt.core/org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ElementImpl.java	2014-11-16 20:15:40.830767432 +0000
@@ -156,4 +156,9 @@
 	{
 		return false;
 	}
+
+       @SuppressWarnings("unchecked")
+       public <A extends Annotation> A[] getAnnotationsByType(Class<A> annotationType) {
+               return (A[]) Factory.EMPTY_ANNOTATIONS;
+       }
 }
--- eclipse.jdt.core/org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ExecutableTypeImpl.java.orig	2014-11-16 20:21:05.870776972 +0000
+++ eclipse.jdt.core/org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ExecutableTypeImpl.java	2014-11-16 20:21:35.981777855 +0000
@@ -122,4 +122,8 @@
 	public TypeKind getKind() {
 		return TypeKind.EXECUTABLE;
 	}
+
+        public TypeMirror getReceiverType() {
+               return NoTypeImpl.NO_TYPE_NONE;
+        }
 }
--- eclipse.jdt.core/org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypeMirrorImpl.java.orig	2014-11-16 20:19:27.054774072 +0000
+++ eclipse.jdt.core/org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypeMirrorImpl.java	2014-11-16 20:20:41.646776261 +0000
@@ -12,6 +12,10 @@
 
 package org.eclipse.jdt.internal.compiler.apt.model;
 
+import java.lang.annotation.Annotation;
+import java.util.List;
+
+import javax.lang.model.element.AnnotationMirror;
 import javax.lang.model.type.TypeKind;
 import javax.lang.model.type.TypeMirror;
 import javax.lang.model.type.TypeVisitor;
@@ -106,5 +110,17 @@
 		return _binding == other._binding;
 	}
 
+       public List<? extends AnnotationMirror> getAnnotationMirrors() {
+               return Factory.EMPTY_ANNOTATION_MIRRORS;
+       }
+
+       public <A extends Annotation> A getAnnotation(Class<A> annotationType) {
+               return null;
+       }
+
+       @SuppressWarnings("unchecked")
+       public <A extends Annotation> A[] getAnnotationsByType(Class<A> annotationType) {
+               return (A[]) Factory.EMPTY_ANNOTATIONS;
+       }
 	
 }
--- eclipse.jdt.core/org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/NoTypeImpl.java.orig	2014-11-16 20:18:07.430771735 +0000
+++ eclipse.jdt.core/org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/NoTypeImpl.java	2014-11-16 20:19:06.318773463 +0000
@@ -11,6 +11,10 @@
 
 package org.eclipse.jdt.internal.compiler.apt.model;
 
+import java.lang.annotation.Annotation;
+import java.util.List;
+
+import javax.lang.model.element.AnnotationMirror;
 import javax.lang.model.type.NoType;
 import javax.lang.model.type.NullType;
 import javax.lang.model.type.TypeKind;
@@ -66,4 +70,17 @@
 		}
 	}
 
+       public List<? extends AnnotationMirror> getAnnotationMirrors() {
+               return Factory.EMPTY_ANNOTATION_MIRRORS;
+       }
+
+       public <A extends Annotation> A getAnnotation(Class<A> annotationType) {
+               return null;
+       }
+
+       @SuppressWarnings("unchecked")
+       public <A extends Annotation> A[] getAnnotationsByType(Class<A> annotationType) {
+               return (A[]) Factory.EMPTY_ANNOTATIONS;
+       }
+
 }
--- eclipse.jdt.core/org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/Factory.java.orig	2014-11-17 10:15:00.640245458 +0000
+++ eclipse.jdt.core/org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/Factory.java	2014-11-17 10:15:50.943246935 +0000
@@ -12,6 +12,7 @@
 
 package org.eclipse.jdt.internal.compiler.apt.model;
 
+import java.lang.annotation.Annotation;
 import java.lang.reflect.Array;
 import java.util.ArrayList;
 import java.util.Collections;
@@ -63,6 +64,10 @@
 	public static final Long DUMMY_LONG = 0l;
 	public static final Short DUMMY_SHORT = 0;
 
+        public static Annotation[] EMPTY_ANNOTATIONS = new Annotation[0];
+        public static List<? extends AnnotationMirror> EMPTY_ANNOTATION_MIRRORS = Collections.emptyList();
+
+
 	private final BaseProcessingEnvImpl _env;
 	
 	/**
--- eclipse.jdt.core/org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ExecutableElementImpl.java.orig     2014-11-17 11:10:47.296343681 +0000
+++ eclipse.jdt.core/org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ExecutableElementImpl.java  2014-11-17 11:12:07.345346030 +0000
@@ -10,6 +10,7 @@
  *******************************************************************************/
 package org.eclipse.jdt.internal.compiler.apt.model;

+import java.lang.annotation.Annotation;
 import java.util.ArrayList;
 import java.util.Collections;
 import java.util.List;

